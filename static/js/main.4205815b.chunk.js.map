{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastKeyPressed","keypressHandler","event","setState","key","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"2NAEO,IAAMA,EAAb,oI,yXAAA,wBACEC,MAAQ,CACNC,eAAgB,IAFpB,EAaEC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CAAEH,eAAgBE,EAAME,KACvC,EAfH,wEAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,gBACzC,GAPH,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAC5C,GAXH,oBAiBE,WACE,IAAQD,EAAmBO,KAAKR,MAAxBC,eAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKR,MAAMC,eAAX,mCAC+BA,EAD/B,KAEG,6BAIX,KA7BH,GAAyBU,IAAMC,e,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,Q","file":"static/js/main.4205815b.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.PureComponent {\n  state = {\n    lastKeyPressed: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.keypressHandler);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.keypressHandler);\n  }\n\n  keypressHandler = (event: KeyboardEvent) => {\n    this.setState({ lastKeyPressed: event.key });\n  };\n\n  render() {\n    const { lastKeyPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.lastKeyPressed\n            ? `The last pressed key is [${lastKeyPressed}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}